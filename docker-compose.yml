services:
# Database container (MySQL)
  database:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 5s
      retries: 5
# API container
  api:
    build: ./API
    env_file:
      - .env
    container_name: api-container
    volumes:
      - ./API:/app/API
      - ./Database:/app/Database
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      database:
        condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - app-network
    command: uvicorn src.app.main:tdlapp --host 0.0.0.0 --port ${API_PORT} --reload
      
# Frontend container (React)
  frontend:
    image: node:latest
    container_name: frontend-container
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - api

# Networks for communication between containers
networks:
  app-network:
    driver: bridge