services:
  # API container
  api:
    build: 
      context: .
      dockerfile: ./API/DockerFile
    container_name: api-container
    volumes:
      - ./API:/app/API
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      database:
        condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - app-network
    command: uvicorn src.app.main:tdlapp --host 0.0.0.0 --port ${API_PORT} --reload

  # Database container (MySQL)
  database:
    image: mysql:latest
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

# Networks for communication between containers
networks:
  app-network:
    driver: bridge

volumes:
  database-data: